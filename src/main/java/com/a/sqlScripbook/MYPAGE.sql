SELECT NOWCNT.*,
(SELECT 
COUNT(*) AS TOTAL
FROM CHALLENGE CG
INNER JOIN CHALLENGEMEMBER CM
ON CM.CHALLENGESEQ = CG.CHALLENGESEQ
WHERE SYSDATE > CG.CHALLENGESTART AND CG.CHALLENGEEND > SYSDATE
AND CM.EMAIL = 'ywoo0309@gmail.com'
) AS NOWCNT2
FROM 
(SELECT 
COUNT(*) AS TOTAL
FROM CHALLENGEMEMBER CM
INNER JOIN CHALLENGE CG
ON CM.CHALLENGESEQ = CG.CHALLENGESEQ
WHERE CM.EMAIL = 'ywoo0309@gmail.com'
) NOWCNT

SELECT * FROM CHALLENGEMEMBER
SELECT * FROM CHALLENGE

SELECT NOWCNT.*,
(SELECT 
COUNT(*) AS TOTAL
FROM CHALLENGEMEMBER CM
INNER JOIN CHALLENGE CG
ON CM.CHALLENGESEQ = CG.CHALLENGESEQ
WHERE SYSDATE > CG.CHALLENGESTART AND CG.CHALLENGEEND > SYSDATE
) AS NOWCNT2
FROM 
(SELECT 
COUNT(*) AS TOTAL
FROM CHALLENGEMEMBER CM
INNER JOIN CHALLENGE CG
ON CM.CHALLENGESEQ = CG.CHALLENGESEQ
WHERE CM.EMAIL = #{email}
) NOWCNT



SELECT * FROM CHALLENGEWISH

DELETE FROM CHALLENGEWISH
WHERE WISHSEQ = '5006'

UPDATE MEMBER 
SET POINT = '10000'
WHERE EMAIL = 'ywoo0309@gmail.com'


SELECT COUNT(*)
FROM CHALLENGEWISH
WHERE EMAIL = 'ywoo0309@gmail.com'

SELECT COUNT(*)
FROM CHALLENGEWISH
WHERE EMAIL = #{email}

SELECT 
CG.CATEGORY, CG.IDENTIFYFREQUENCY, CG.CHALLENGEPERIOD, CG.CHALLENGETITLE
FROM CHALLENGE CG
INNER JOIN CHALLENGEMEMBER CM
ON CM.CHALLENGESEQ = CG.CHALLENGESEQ
WHERE SYSDATE > CG.CHALLENGESTART AND CG.CHALLENGEEND > SYSDATE
AND CM.EMAIL = 'ywoo0309@gmail.com'

-- 진행 완료된 챌린지
SELECT COUNT(*)
FROM CHALLENGE
WHERE SYSDATE > CHALLENGEEND AND EMAIL = 'ywoo0309@gmail.com'

-- 데일리 챌린지
SELECT COUNT(*)
FROM CHALLENGE
WHERE SYSDATE > CHALLENGESTART AND CHALLENGEEND > SYSDATE AND EMAIL = 'ywoo0309@gmail.com'

SELECT CG.CHALLENGESEQ, CG.CATEGORY, CG.IDENTIFYFREQUENCY, CG.CHALLENGEPERIOD, CG.CHALLENGETITLE
		FROM CHALLENGE CG
		INNER JOIN CHALLENGEMEMBER CM
		ON CM.CHALLENGESEQ = CG.CHALLENGESEQ
		WHERE
			<c:choose>
				<c:when test='NAME eq 0'>
					CG.CHALLENGESTART > SYSDATE AND CG.CHALLENGEEND > SYSDATE
				</c:when>
				<c:when test='NAME eq 1'>
					SYSDATE > CG.CHALLENGESTART AND CG.CHALLENGEEND > SYSDATE
				</c:when>
				<c:when test='NAME eq 2'>
					SYSDATE > CG.CHALLENGESTART AND SYSDATE > CG.CHALLENGEEND
				</c:when>
			</c:choose>
AND CM.EMAIL = #{email}

SELECT * FROM CHALLENGE

SELECT * FROM SUGGESTBBS

SELECT * FROM MEMBER

SELECT COUNT(*) AS TOTAL, CG.CATEGORY 
		FROM CHALLENGE CG
		INNER JOIN CHALLENGEMEMBER CM
		ON CM.CHALLENGESEQ = CG.CHALLENGESEQ
		WHERE CM.EMAIL = 'ywoo0309@gmail.com'
		GROUP BY CG.CATEGORY
		
-- 오늘 진행중인 챌린지
SELECT CG.CHALLENGESEQ, CG.CATEGORY, CG.IDENTIFYFREQUENCY, CG.CHALLENGEPERIOD, CG.CHALLENGETITLE, CG.CHALLENGESAVEPHOTO
FROM CHALLENGE CG
INNER JOIN CHALLENGEMEMBER CM
ON CM.CHALLENGESEQ = CG.CHALLENGESEQ
WHERE SYSDATE > CHALLENGESTART AND CHALLENGEEND > SYSDATE
AND CM.EMAIL = 'ywoo0309@gmail.com'


SELECT  CHALLENGESEQ, CATEGORY, CHALLENGETITLE, CHALLENGESTART, CHALLENGEEND,
CHALLENGESTOP, CHALLENGEDEL
FROM CHALLENGE
ORDER BY CHALLENGESEQ
WHERE 


SELECT * FROM CHALLENGE
	
	SELECT SV.* FROM
	(SELECT SBS.*, ROW_NUMBER() OVER(ORDER BY SBS.SUGGESTBBSSEQ DESC) as SI,
	CASE WHEN CNT.LIKECNT IS NULL THEN 0 ELSE CNT.LIKECNT END AS LIKECNT,
	CASE WHEN ML.SUGGESTBBSSEQ IS NULL THEN 0 ELSE 1 END AS LIKECHECK,
	(SELECT COUNT(*) FROM SUGGESTBBS
	WHERE  SUGGESTBBSDEL = 0
			
	) as TOTALCNT
	FROM SUGGESTBBS SBS
	LEFT JOIN (SELECT SUGGESTBBSSEQ,COUNT(*) AS LIKECNT FROM MYLIKE GROUP BY SUGGESTBBSSEQ) CNT
	ON SBS.SUGGESTBBSSEQ = CNT.SUGGESTBBSSEQ
	LEFT JOIN (SELECT SUGGESTBBSSEQ FROM MYLIKE WHERE EMAIL = 'ywoo0309@gmail.com') ML
	ON SBS.SUGGESTBBSSEQ = ML.SUGGESTBBSSEQ
	WHERE  SBS.SUGGESTBBSDEL = 0
	ORDER BY LIKECNT DESC		
			) SV
	WHERE SV.SI > 0 AND 13 > SV.SI
	
	
	SELECT SV.* FROM
	
	(SELECT CH.*, 
	ROWNUM as SI,
	(SELECT COUNT(*) FROM CHALLENGE
	WHERE  CHALLENGEDEL = 0		
	) as TOTALCNT
	FROM CHALLENGE CH 
	WHERE CHALLENGEDEL = 0
		   
			) SV
	WHERE SV.SI > 0 AND 13 > SV.SI
	
	
	
	SELECT SV.* FROM
	(SELECT CHA.*, ROW_NUMBER() OVER(ORDER BY CHALLENGESEQ DESC) as SI,
	
	(SELECT COUNT(*) FROM CHALLENGE
	WHERE  CHALLENGEDEL = 0
			
	) as TOTALCNT
	FROM CHALLENGE CHA
	
	WHERE CHALLENGEDEL = 0
		    <if test="category !=null and category !='' and category !=0">
				AND CATEGORY = #{category}
			</if>
			<if test="mSearch !=null and mSearch != ''">
				AND CHALLENGETITLE LIKE '%'||#{mSearch}||'%'
			</if>
			<if test="datestart !=null and datestart !='' and datestart !=0">
			AND CHALLENGESTART > #{datestart}
			</if>
			<if test="dateend !=null and dateend !='' and dateend !=0">
			AND #{dateend} > CHALLENGEEND
			</if>
			) SV
	WHERE SV.SI > 0 AND 13 > SV.SI
	
	SELECET * FROM
	
	
	SELECT SV.* FROM
	(SELECT CHA.*, ROW_NUMBER() OVER(ORDER BY CHALLENGESEQ DESC) as SI,
	(SELECT COUNT(*) FROM CHALLENGE
	WHERE  CHALLENGEDEL = 0
	) as TOTALCNT
	FROM CHALLENGE CHA
	WHERE CHALLENGEDEL = 0)
	    <if test="category !=null and category !='' and category !=0">U
			AND CATEGORY = #{category}
		</if>
		<if test="mSearch !=null and mSearch != ''">
			AND CHALLENGETITLE LIKE '%'||#{mSearch}||'%'
		</if>
		<if test="datestart !=null and datestart !='' and datestart !=0">
		AND CHALLENGESTART > #{datestart}
		</if>
		<if test="dateend !=null and dateend !='' and dateend !=0">
		AND #{dateend} > CHALLENGEEND
		</if>
	) SV
	WHERE SV.SI > #{startPage} AND #{endPage} > SV.SI