<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="challenge">
	
	<insert id="challengeInsert" parameterType="com.a.dto.challengeDto">
		
		INSERT INTO CHALLENGE(CHALLENGESEQ, CATEGORY, CHALLENGETITLE, CHALLENGETEXT,CHALLENGESTART, CHALLENGEEND,CHALLENGEPERIOD,
						IDENTIFYFREQUENCY, IDENTIFYDAY, IDENTIFYTIME, CHALLENGEPHOTO, CHALLENGESAVEPHOTO, CERTIFYPHOTO, CERTIFYSAVEPHOTO, CERTIFY, RATINGAVG, CHALLENGESTOP, CHALLENGEDEL, 
						HEADERNUM, POINTCOUNT, CHALLENGEMEMBER, EMAIL)
		VALUES(CHAL_SEQ.NEXTVAL, #{category}, #{challengetitle}, #{challengetext}, #{challengestart}, #{challengeend}, #{challengeperiod}, 
				#{identifyfrequency}, #{identifyday}, #{identifytime}, #{challengephoto}, #{challengesavephoto}, #{certifyphoto}, #{certifysavephoto},#{certify}, 0.0, 0, 0,
				(SELECT M.AUTH FROM MEMBER M, CHALLENGE C WHERE M.EMAIL = C.EMAIL AND C.EMAIL = #{email}), #{pointcount}, 0, #{email})
		
	</insert>
	
	<!-- hotChallengeData 데이터 전부 가져오기 java.util.Map(param은 start end search category   -->
	<select id="hotChallengeData" parameterType="java.util.Map" resultType="com.a.util.lowerKeyMap">
	 	SELECT CHALLENGESEQ, CATEGORY, CHALLENGETITLE, CHALLENGETEXT, CHALLENGESTART, CHALLENGEEND, CHALLENGEPERIOD,
	 			  IDENTIFYFREQUENCY, IDENTIFYDAY, IDENTIFYTIME, CHALLENGEPHOTO, CHALLENGESAVEPHOTO, RATINGAVG, HEADERNUM, POINTCOUNT, CHALLENGEMEMBER, EMAIL,
	 			  NICKNAME, AUTH, MEMBERPHOTO
	 	FROM (SELECT ROW_NUMBER()OVER(ORDER BY CHALLENGEMEMBER DESC) AS RNUM,
				CHALLENGESEQ, CATEGORY, CHALLENGETITLE, CHALLENGETEXT, CHALLENGESTART, CHALLENGEEND, CHALLENGEPERIOD,
	 			IDENTIFYFREQUENCY, IDENTIFYDAY, IDENTIFYTIME, CHALLENGEPHOTO, CHALLENGESAVEPHOTO, RATINGAVG, HEADERNUM, POINTCOUNT, CHALLENGEMEMBER, C.EMAIL,
	 			 M.NICKNAME, M.AUTH, M.MEMBERPHOTO
	  		  FROM CHALLENGE C, MEMBER M
	  		  WHERE 1=1 
	  		  		AND C.EMAIL = M.EMAIL
		  		  		AND CHALLENGESTOP = 0 
		  		  			AND CHALLENGEDEL = 0
		  		  				<if test="category != 0"><!-- 안전성을 고려 -->
				  					AND CATEGORY = ${category}
				  				</if>
					  		  	 	<if test="search != null and search != ''"><!-- 안전성을 고려 -->
						  				 AND CHALLENGETITLE LIKE '%'||#{search}||'%'		  
					  				</if>
			  ORDER BY CHALLENGEMEMBER DESC, CHALLENGESTART DESC) 
	 	WHERE RNUM BETWEEN ${startPage} AND ${endPage}
	</select>
	
	<!-- challengeDataCount 글의 총 수 가져오기 paramMap search / category-->
	<select id="challengeDataCount" parameterType="java.util.Map" resultType="java.lang.Integer">
	 	SELECT NVL(COUNT(*), 0)
	 	FROM CHALLENGE
	  	WHERE 1=1 
	  		AND CHALLENGESTOP = 0 
	  			AND CHALLENGEDEL = 0
	  				<if test="category != 0"><!-- 안전성을 고려 -->
	  					AND CATEGORY = ${category}
	  				</if>
					  	 <if test="search != null and search != ''"><!-- 안전성을 고려 -->
			 				 AND CHALLENGETITLE LIKE '%'||#{search}||'%'		  
						</if>
	</select>
	
	<!-- 생성한 멤버의 데이터 가져오기 -->
	<select id="createChallengeMember"  parameterType="java.lang.String" resultType="java.util.Map">
		SELECT C.CHALLENGESEQ, M.EMAIL, M.NICKNAME, M.AUTH, M.MEMBERPHOTO
		FROM CHALLENGE C, MEMBER M
		WHERE C.EMAIL = M.EMAIL
			AND C.EMAIL = #{email}
	</select>
	
	<!-- 챌린지 한개 가져오기 challengeDetail //parameter : challengeseq -->
	<select id="challengeDetail" parameterType="java.lang.Integer" resultType="com.a.dto.challengeDto">
		SELECT CHALLENGESEQ, CATEGORY, CHALLENGETITLE, CHALLENGETEXT, CHALLENGESTART, CHALLENGEEND, CHALLENGEPERIOD, IDENTIFYFREQUENCY,
				IDENTIFYDAY, IDENTIFYTIME, CHALLENGESAVEPHOTO, CERTIFYSAVEPHOTO, CERTIFY, RATINGAVG, POINTCOUNT, EMAIL
		FROM CHALLENGE
		WHERE CHALLENGESEQ = #{challengeseq}
	</select>
	
</mapper>