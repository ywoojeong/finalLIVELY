<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="manager">
	
	<!-- 매니저 챌린지 -->
	<select id="managerList" parameterType="java.util.Map" resultType="java.util.Map">
	SELECT SV.CHALLENGESEQ, SV.CATEGORY, SV.CHALLENGETITLE, SV.CHALLENGESTOP,SV.CHALLENGEDEL, TO_CHAR(SV.CHALLENGESTART,'YYYY-MM-DD')AS CHALLENGESTART,TO_CHAR(SV.CHALLENGEEND,'YYYY-MM-DD')AS CHALLENGEEND,
	TO_CHAR(SV.CHALLENGESDATE,'YYYY-MM-DD') AS CHALLENGESDATE, SV.TOTALCNT FROM
		(SELECT CHA.*, ROW_NUMBER() OVER(ORDER BY CHALLENGESEQ DESC) as SI,
		(SELECT COUNT(*) FROM CHALLENGE
		WHERE  CHALLENGEDEL = 0
			<if test="category !=null and category !='' and category !=0">
				AND CATEGORY = #{category}
			</if>
			<if test="mSearch !=null and mSearch != ''">
				AND CHALLENGETITLE LIKE '%'||#{mSearch}||'%'
			</if>
			<if test='datestart !=null and datestart !="" '>
				AND CHALLENGESTART > TO_DATE(#{datestart}, 'YYYY-MM-DD HH24:MI:SS')
			</if>
			<if test='dateend !=null and dateend !="" '>
				AND TO_DATE(#{dateend}, 'YYYY-MM-DD HH24:MI:SS') > CHALLENGEEND
			</if>
		) as TOTALCNT
	FROM CHALLENGE CHA
	WHERE CHALLENGEDEL = 0
	    <if test="category !=null and category !='' and category !=0">
			AND CATEGORY = #{category}
		</if>
		<if test="mSearch !=null and mSearch != ''">
			AND CHALLENGETITLE LIKE '%'||#{mSearch}||'%'
		</if>
		<if test='datestart !=null and datestart !="" '>
			AND CHALLENGESTART > TO_DATE(#{datestart}, 'YYYY-MM-DD HH24:MI:SS')
		</if>
		<if test='dateend !=null and dateend !="" '>
			AND TO_DATE(#{dateend}, 'YYYY-MM-DD HH24:MI:SS') > CHALLENGEEND
		</if>
	) SV
	WHERE SV.SI > #{startPage} AND #{endPage} > SV.SI
	</select>
	
	
	
	<!-- 민선 부분 매퍼 -->
	<!-- 전체 사용자 수 userAllCount-->
	<select id="userAllCount" resultType="java.lang.Integer">
	 	SELECT COUNT(*)
		FROM MEMBER
	</select>
	
	<!-- 전체 챌린지 수 -->
	<select id="challengeAllCount" resultType="java.lang.Integer">
	 	SELECT COUNT(*)
		FROM CHALLENGE
	</select>
	
	<!-- 월별 챌린지 생성 개수 challengeAdd-->
	<select id="challengeAdd" resultType="com.a.util.lowerKeyMap">
	  SELECT NVL(SUM(A.CNT), 0) AS CHALLENGECOUNT
	  FROM (SELECT TO_CHAR(CHALLENGESDATE, 'YYYY-MM-DD') AS CHALLENGESDATE, COUNT(*) AS CNT
	        FROM CHALLENGE
	        WHERE CHALLENGESDATE BETWEEN TO_DATE('2021-01-01', 'YYYY-MM-DD') AND TO_DATE('2021-12-31', 'YYYY-MM-DD') 
	        GROUP BY CHALLENGESDATE
	        ) A,
	      (SELECT TO_DATE('2021-01-01','YYYY-MM-DD') + LEVEL - 1 AS DT
	       FROM dual 
	       CONNECT BY LEVEL <![CDATA[ <= ]]> (TO_DATE('2021-12-31','YYYY-MM-DD') - TO_DATE('2021-01-01','YYYY-MM-DD') + 1)
	       ) B
	  WHERE B.DT = A.CHALLENGESDATE(+)
	  GROUP BY TO_CHAR(B.DT, 'YYYY-MM')
	  ORDER BY TO_CHAR(B.DT, 'YYYY-MM')
	 </select>
	
	<!-- 카테고리별 챌린지 개수  challengeCategory-->
	<select id="challengeCategory" resultType="com.a.util.lowerKeyMap">
		SELECT COUNT(*) AS CATEGORYCOUNT
		FROM CHALLENGE	
		GROUP BY CATEGORY
		ORDER BY CATEGORY	
	</select>
	
	<!-- 챌린지 가입인원 수 challengeMemberMax -->
	<select id="challengeMemberMax" resultType="com.a.util.lowerKeyMap">
		SELECT C.*
		FROM (SELECT ROW_NUMBER()OVER(ORDER BY CHALLENGEMEMBER DESC, CHALLENGESTART DESC) AS RNUM, CHALLENGETITLE, CHALLENGEMEMBER, CHALLENGESDATE
		FROM CHALLENGE) C
		WHERE C.RNUM <![CDATA[ >= ]]> 1 AND C.RNUM <![CDATA[ <= ]]>7
		ORDER BY C.RNUM, C.CHALLENGESDATE DESC
	</select>
	
	<!-- 챌린지 인증 퍼센트 높은 순 (유저 많은 순) challengeIdentifyMax -->
	
	<!-- 월별 사용자 가입수 userAdd -->
	<select id="userAdd" resultType="com.a.util.lowerKeyMap">
	  SELECT NVL(SUM(a.CNT), 0) AS MEMBERCOUNT
	  FROM (SELECT TO_CHAR(MEMBERSDATE, 'YYYY-MM-DD') AS MEMBERSDATE, COUNT(*) AS CNT
	        FROM MEMBER
	        WHERE MEMBERSDATE BETWEEN TO_DATE('2021-01-01', 'YYYY-MM-DD') AND TO_DATE('2021-12-31', 'YYYY-MM-DD') 
	        GROUP BY MEMBERSDATE
	        ) A,
	      (SELECT TO_DATE('2021-01-01','YYYY-MM-DD') + LEVEL - 1 AS DT
	       FROM dual 
	       CONNECT BY LEVEL <![CDATA[ <= ]]> (TO_DATE('2021-12-31','YYYY-MM-DD') - TO_DATE('2021-01-01','YYYY-MM-DD') + 1)
	       ) B
		WHERE B.DT = A.MEMBERSDATE(+)
		GROUP BY TO_CHAR(B.DT, 'YYYY-MM')
		ORDER BY TO_CHAR(B.DT, 'YYYY-MM')
	</select>
	
	<!-- 인증률이 높은 유저 순(6명) userIdentify-->
	
	<!-- 좋아요 많이 받은 순(following) userFollowingMax -->
	<select id="userFollowingMax" resultType="com.a.util.lowerKeyMap">
		SELECT F.*
		FROM (SELECT ROW_NUMBER() OVER(ORDER BY FOLLOWINGEMAIL DESC) AS RNUM, COUNT(*) AS FOLLOWING, FOLLOWINGEMAIL, (SELECT NICKNAME FROM MEMBER WHERE EMAIL = FOLLOWINGEMAIL) AS NICKNAME
		FROM FOLLOW F
		GROUP BY F.FOLLOWINGEMAIL) F
		WHERE F.RNUM BETWEEN 1 AND 7
	</select>
	
	<!-- 포인트가 많은 사용자 순 userPointMax -->	
	<select id="userPointMax" resultType="com.a.util.lowerKeyMap">
		SELECT C.*
		FROM (SELECT ROW_NUMBER()OVER(ORDER BY POINT DESC) AS RNUM, NICKNAME, POINT
		FROM MEMBER) C
		WHERE C.RNUM BETWEEN 1 AND 7
	</select>
</mapper>